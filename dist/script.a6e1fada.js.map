{"version":3,"sources":["scripts/script.js"],"names":[],"mappingsfile":"script.a6e1fada.js","sourceRoot":"../src","sourcesContent":["/** @format */\n\n// import {add} from './app';\n// import {subtract} from './app';\n// import {product} from './app';\n// import {divide} from './app';\n// import {operate} from './app';\n\n// Math Functions\n// const add = (a, b) => a + b;\n// const subtract = (a, b) => a - b;\n// const product = (a, b) => a * b;\n// const divide = (a, b) => a / b;\n\n// const operate = (operation, x, y) => {\n//   console.log(x, operation, y);\n\n//   switch (true){\n\n//     case operation == \"add\":\n//       outputScreen = add(x, y);\n\n//       output.textContent = `${outputScreen}`;\n//       break;\n//     case operation == \"subtract\":\n//       outputScreen = subtract(y, x);\n\n//       output.textContent = `${outputScreen}`;\n//       break;\n//     case operation == \"product\":\n//       outputScreen = product(x, y);\n\n//       output.textContent = `${outputScreen}`;\n//       break;\n//     case operation == \"divide\":\n//       outputScreen = divide(y, x);\n\n//       output.textContent = `${outputScreen}`;\n//       break;\n//   }\n// }\n\n// const calculator = document.querySelector('div.calculatorBody');\n// const entry = document.querySelector('div.entry');\n// const output = document.querySelector('div.output');\n// const controls = document.querySelector('div.controls');\n// const operators = document.querySelector('div.operators');\n// const numbers = document.querySelector('div.numbers');\n// const buttons = document.querySelectorAll('.button');\n\n// const controlCheck = [\"Escape\", \"Delete\", \"Backspace\", \"Enter\"];\n// const operatorCheck = [\"+\", \"-\", \"*\", \"/\"];\n// const periodCheck = [\".\", \"Period\"];\n// const negsCheck = [\"PosNeg\"]\n// const operationCheck = [\"add\", \"subtract\", \"product\", \"divide\"]\n// const integerCheck = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n\n// let outputScreen = \"\";\n// let entryScreen = \"\";\n// let operation = \"\";\n\n// event listener for change in input or entry\n// output.addEventListener(\"change\", e => {\n//   output.textContent = `${outputScreen}`;\n//   if(outputScreen.length > 12){\n//     outputScreen.substr(0,12);\n//     output.textContent = `${outputScreen}`;\n//   }\n// })\n\n// entry.addEventListener(\"change\", e => {\n//   console.log(\"fires\");\n//   entry.textContent = `${entryScreen}`;\n//   if(entryScreen.length > 12){\n//     console.log(entryScreen);\n//     entryScreen.substr(0,12);\n//     entry.textContent = `${entryScreen}`;\n//   }\n// })\n\n// if statements to limit size of entry and output\n\n// when keypress down matches button on calculator\n// document.addEventListener('keydown', e => {\n//   // console.log(e.key);\n//   if(integerCheck.includes(e.key)){entryInput(e.key);\n//   } else  if(operatorCheck.includes(e.key)){operatorInput(e.key);\n//   } else if(controlCheck.includes(e.key)){controlInput(e.key);\n//   } else if(periodCheck.includes(e.key)){perAdd(entryScreen);\n//   }\n// });\n\n// when clicking calculator button\n// document.addEventListener('click', e => {\n//   // console.log(e.target.id, \"clicks\");\n//   if(integerCheck.includes(e.target.id)){entryInput(e.target.id);\n//   } else if(operatorCheck.includes(e.target.id)){operatorInput(e.target.id);\n//   } else if(controlCheck.includes(e.target.id)){controlInput(e.target.id);\n//   } else if(negsCheck.includes(e.target.id)){addNeg(entryScreen);\n//   } else if(periodCheck.includes(e.target.id)){perAdd(entryScreen)}\n// });\n\n// display Out will check length of input screens and adjust accordingly\n// const dispOut = (x) => {\n//   if (outputScreen.length > 15){\n//     outputScreen.substr(0, 20);\n//   }\n// };\n\n// period adder function - spread? string into an array and filter for periods\n// const perAdd = (x) => {\n//   console.log(\"fire here\")\n//   periodCount = [...x].filter( i => i == \".\").length;\n//   if(periodCount < 1){\n//     entryScreen += \".\";\n//     entry.textContent = `${entryScreen}`;\n//   }\n// }\n\n// // entry screen input\n// const entryInput = (x) => {\n//   entryScreen += x;\n//   entry.textContent = `${entryScreen}`;\n//   output.textContent = `${outputScreen}`;\n// }\n\n// // backspace function\n// const backOne = (x) => {\n//   if(x.length > 0) {\n//     newEntry = entryScreen.substr(0, x.length - 1);\n//     entryScreen = newEntry;\n//     entry.textContent = `${entryScreen}`;\n//   }\n// }\n\n// // negative function\n// const addNeg = (x) => {\n//   if(x > 0){\n//     entryScreen = -x; // make negative?\n//     entry.textContent = `${entryScreen}`;\n//   } else if (x < 0){\n//     entryScreen = -x; // make positive?\n//     entry.textContent = `${entryScreen}`;\n//   }\n// }\n\n// // operation selector function\n// const operSelector = (x) => {\n//   switch (true){\n//     case x == \"+\":\n//       operation = \"add\";\n//       break;\n//     case x == \"-\":\n//       operation = \"subtract\";\n//       break;\n//     case x == \"*\":\n//       operation = \"product\";\n//       break;\n//     case x == \"/\":\n//       operation = \"divide\"\n//       break;\n//   }\n// }\n\n// // function for controls\n// const controlInput = (x) => {\n//   console.log(x, \" control input function firing\");\n//   switch (true){\n//     case x == \"Enter\":\n//       console.log(\"Entering\");\n//       operate(operation, +entryScreen, +outputScreen);\n//       entryScreen = \"\";\n//       operation = \"\";\n//       entry.textContent = `${entryScreen}`;\n//       break;\n//     case x == \"Backspace\":\n//       console.log(\"Backspace fires\");\n//       backOne(entryScreen);\n//       break;\n\n//     case x == \"Escape\":\n//       console.log(\"Escape\");\n//       if(entryScreen !== \"\"){\n//         entryScreen = \"\";\n//         entry.textContent = `${entryScreen}`;\n//       }\n//       location.reload(true);\n//       break;\n//     case x == \"Delete\":\n//       console.log(\"Delete\");\n//       if(entryScreen !== \"\"){\n//         entryScreen = \"\";\n//         entry.textContent = `${entryScreen}`;\n//       }\n//       break;\n//   }\n// };\n\n// // function to run when operation pressed\n// const operatorInput = (x) => {\n//   if(entryScreen !== \"\" && operation == \"\" && outputScreen == \"\"){  // run if entry is full while operation and output are empty: move a>b and +operation\n//     switch (true){\n//       case x == \"+\":\n//         outputScreen = entryScreen;\n//         entryScreen = \"\";\n//         operation = \"add\";\n//         break;\n//       case x == \"-\":\n//         outputScreen = entryScreen;\n//         entryScreen = \"\";\n//         operation = \"subtract\";\n//         break;\n//       case x == \"*\":\n//         outputScreen = entryScreen;\n//         entryScreen = \"\";\n//         operation = \"product\";\n//         break;\n//       case x == \"/\":\n//         outputScreen = entryScreen;\n//         entryScreen = \"\";\n//         operation = \"divide\";\n//         break;\n//     }\n//   } else if(entryScreen !== \"\" && operation !== \"\" && outputScreen !== \"\"){ // run all true: check for zeroes in mult & div\n//     switch (true){\n//       case x == \"*\":\n//         if(entryScreen == 0){\n//           console.log(\"enter something other than zero please\");\n//         } else if(outputScreen == 0){\n//           console.log(\"you will get a 0 because it's multiplying by zero\");\n//         }\n//         break;\n//       case x == \"/\":\n//         if(entryScreen == 0){\n//           console.log(\"cannot divide by zero\")\n//         } else if(outputScreen == 0){\n//           console.log(\"whoa whoa\")\n//         }\n//         break;\n//       default:\n//         console.log(\"default firing\");\n//         operate(operation, +entryScreen, +outputScreen);\n//         entryScreen = \"\";\n//         operSelector(x);\n//     }\n//   } else if(entryScreen == \"\" && operation == \"\" && outputScreen == \"\"){\n//     console.log(\"all inputs false\");\n//   } else {\n//     switch (true){\n//       case x == \"+\":\n//         operation = \"add\";\n//         break;\n//       case x == \"-\":\n//         operation = \"subtract\";\n//         break;\n//       case x == \"*\":\n//         operation = \"product\";\n//         break;\n//       case x == \"/\":\n//         operation = \"divide\";\n//         break;\n//     }\n//   }\n// }\n"]}